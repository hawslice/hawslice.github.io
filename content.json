[{"title":"C语言基本数据类型及长度","date":"2020-04-21T14:53:40.000Z","path":"2020/04/21/C语言基本数据类型/","text":"在 C 语言中，数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统，其中函数的类型指的是函数返回值的类型。对象的类型决定该对象可取值的集合以及可以对该对象执行的操作。 基本数据类型C语言提供了下列几种基本数据类型 char 字符型，占用一个字节，可以存放本地字符集中的一个字符。 int 整型，占用四个字节，通常反映了所用机器中整数的最自然长度。 float 单精度浮点型，占用四个字节。 double 双精度浮点型，占用八个字节。 字符型下表列出了关于字符类型的存储大小和值范围的细节： 类型 存储大小 取值范围 char 1 字节 -128 到 127 或 0 到 255 unsigned char 1 字节 0 到 255 signed char 1 字节 -128 到 127 整型下表列出了关于整数类型的存储大小和值范围的细节： 类型 存储大小 取值范围 int 2 或 4 字节 -32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647 unsigned int 2 或 4 字节 0 到 65,535 或 0 到 4,294,967,295 short 2 字节 -32,768 到 32,767 unsigned short 2 字节 0 到 65,535 long 4 字节 -2,147,483,648 到 2,147,483,647 unsigned long 4 字节 0 到 4,294,967,295 注：当用long或short限定符限定整型时，关键字int可以省路，通常很多人也习惯这样做。 浮点型下表列出了关于标准浮点类型的存储大小、值范围和精度的细节： 类型 存储大小 取值范围 精度 float 4 字节 1.2E-38 到 3.4E+38 6 位小数 double 8 字节 2.3E-308 到 1.7E+308 15 位小数 long double 16 字节 3.4E-4932 到 1.1E+4932 19 位小数 注：上述内容皆适用于常见的64位系统，对于其他具体机器，可能会出现不同存储大小。 补充说明short与long两个限定符的引入可以为我们提供满足实际需要的不同长度的整型数。int通常代表特定机器中整数的自然长度。编译器可以根据硬件性能特性自主选择合适的类型长度，但要遵循下列限制：short与int类型至少为16位，二long类型至少位32位，并且short类型不得长于int类型，而int类型不得长于long类型。 类型限定符signed与unsigned可用于限定char类型或任何整型。unsigned类型得数总是正值或0，并遵守算数模2^n，其中n是该类型占用的位数。例如，如果char对象占用8位，那么unsigned char类型变量的取值范围是0~255，而signed char类型变量的取值范围则为-128~127（在采用二进制补码的机器上）。不带限定符的char类型对象是否带符号取决于具体的机器，但可打印字符总是正值。 long double类型表示高精度浮点数。同整型一样，浮点型的长度也取决于具体的实现，float、double与long double类型可以表示相同的长度，也可以表示两种或三种不同的长度。 有关这些类型长度定义的符号常量以及其他与机器和编译器有关的属性可以在标准头文件&lt;limits.h&gt;与&lt;float.h&gt;中找到。","tags":[{"name":"编程","slug":"编程","permalink":"http://hawslice.com/tags/%E7%BC%96%E7%A8%8B/"},{"name":"C语言","slug":"C语言","permalink":"http://hawslice.com/tags/C%E8%AF%AD%E8%A8%80/"}]},{"title":"C语言入门","date":"2020-04-21T10:06:14.000Z","path":"2020/04/21/C语言入门/","text":"Hello world学习一门新程序设计语言的唯一途径就是使用它编写程序。对于所有语言的初学者来说，编写的第一个程序几乎都是相同的，即打印出以下内容： 1hello, world 在C语言中我们可以使用下列程序打印出”hello, world”： 1234567#include &lt;stdio.h&gt;int main()&#123; printf(\"hello, world\\n\"); return 0;&#125; 实例解析一个C语言程序，无论其大小如何，都是由函数和变量组成的。函数中包含一些语句，以指定所要执行的计算操作；变量则用于存储计算过程中使用的值。在本例中，函数的名字为main。它是一个特殊的函数名——每个程序都是从main函数的起点开始执行，这意味着每个程序都必须在某个位置包含一个main函数。 main函数在执行过程中，通常会调用其他函数来帮助执行计算，这些被调用的函数可以是我们自己编写的，也可以来自于函数库。 例子中的第一行语句 1#include &lt;stdio.h&gt; 用于告诉编译器在本程序中包含标准输入/输出库的信息。在很多C语言源程序的其实部分都包含这一行语句。 函数在定义时需要选择一个返回类型，在本例中选用的int整型，所以我们在main函数的最后一句加上了一句return 0;。 在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束。它表明一个逻辑实体的结束。 函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值（参数）列表。函数后面的一对圆括号将参数列表括起来。在本例中，main函数不需要任何参数，因此用空参数表()表示。 函数中的语句用一对花括号{}括起来。main函数中的第二条语句已经解释过了，下面我们着重讲解第一条语句。 1printf(\"hello, world\\n\"); 在调用函数时，只需要用函数名加上被括号括起来的参数表即可。在这一条语句中printf是一个用于打印输出的库函数，&quot;hello, world\\n&quot;作为参数。这行语句的作用是在屏幕上打印出双引号之间的字符串。 用双引号括起来的字符串被称为字符串或字符串常量，&quot;hello, world\\n&quot;就是一个字符串。 在C语言中字符序列\\n表示换行符，在打印中遇到它时，打印输出将换行。如果去掉字符串中的\\n，即使打印输出完成后也不会换行。在printf函数的参数中，只能用\\n表示换行符。如果用程序的换行代替\\n，例如： 12printf(\"hello, world\"); C编译器将产生一条错误信息。 printf函数永远不会自动换行，所以我们可以多次调用该函数以分阶段得到一个长输出行。上面给出的程序也可以改写成以下形式： 123456789#include &lt;stdio.h&gt;int main()&#123; printf(\"hello, \"); printf(\"world\"); printf(\"\\n\"); return 0;&#125; 这段程序与前面程序的输出结果时相同的。","tags":[{"name":"编程","slug":"编程","permalink":"http://hawslice.com/tags/%E7%BC%96%E7%A8%8B/"},{"name":"C语言","slug":"C语言","permalink":"http://hawslice.com/tags/C%E8%AF%AD%E8%A8%80/"}]},{"title":"HTML基本结构与常用标记","date":"2020-04-20T14:19:51.000Z","path":"2020/04/20/HTML/","text":"什么是HTMLHTML的英文全称是Hyper Text Markup Language，即超文本标记语言，它是Internet上用于编写网页的主要标记语言。 HTML文件的基本结构一个完整的HTML文件由各种元素与标记组成，包括标题、段落、表格和超链接等。下面是一个HTML文件的基本结构。 123456789&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; ... &lt;/head&gt; &lt;body&gt; ... &lt;/body&gt;&lt;/html&gt; 解析说明 &lt;!DOCTYPE html&gt;声明为HTML5文档。 &lt;html&gt;元素是HTML页面的根元素，标示HTML文件的起始位置与结束位置。 &lt;head&gt;元素包含了文档的元(meta)数据。 &lt;body&gt;元素用来指明文档的主体区域，包含了可见的页面内容。 注：在浏览器的页面上使用键盘上的F12开启调试模式，就可以看到组成标签。 HTML标签HTML 标记标签通常被称为 HTML 标签 (HTML tag)。 HTML 标签是由尖括号包围的关键词，比如 &lt;html&gt;。 HTML 标签通常是成对出现的，比如&lt;b&gt;和&lt;/b&gt;。 标签对中的第一个标签是开始标签，第二个标签是结束标签。 开始和结束标签也被称为开放标签和闭合标签。 HTML元素HTML 标签” 和 “HTML 元素” 通常都是描述同样的意思.但是严格来讲, 一个 HTML 元素包含了开始标签与结束标签，如下实例:HTML 元素: 1&lt;p&gt;这是一个段落。&lt;/p&gt; 常用HTML标记类型常用HTML标记形式分为以下4种： &lt;标记名称&gt;：单一型，无设置值。例如：&lt;br&gt; &lt;标记名称 属性=”属性值”&gt;：单一型，有设置值。例如&lt;hr color=&quot;red&quot;&gt;。 &lt;标记名称&gt;…&lt;/标记名称&gt;：对称型，无设置值。例如&lt;title&gt;…&lt;/title&gt; &lt;标记名称 市举行=”属性值”&gt;…&lt;/标记名称》:对称型，有设置值。例如：&lt;body bgcolor=&quot;red&quot;&gt;…&lt;/body&gt; 常用HTML标记标题&lt;hn&gt;…&lt;/hn&gt;h1到h6，作为标题标记，并且依据重要性递减，字号从h1到h6由大变小。实例如下： 123&lt;h1&gt;学习标题标记&lt;/h1&gt; &lt;h2&gt;标记类型&lt;/h2&gt; &lt;h3&gt;常用标记&lt;/h3&gt; h1一级标题代表重中之重，一般用于网站标题或者头条新闻。h2二级标题主要出现在主体内容的文章标题和栏目标题上。h3三级标题一般出现在页面的侧柏男篮上。页面层级关系不能太深，所以h4、h5、h6一般出现的比较少。 段落&lt;p&gt;…&lt;/p&gt;在HTML网页中，使用标记实现一个新段落，语法格式如下： 1&lt;p&gt;段落的内容&lt;/p&gt; p标记有一个属性align能够设置段落中文字的对齐方式，对齐方式分为左对齐、居中和两端对齐，语法格式如下： 1&lt;p align=\"对齐方式\"&gt;&lt;/p&gt; 其中，align取值为left时，文字显示左对齐；取值为right时，右对齐；取值为center时，居中对齐。 滚动（marquee）marquee标记可以让文字滚动，该标记有滚动方向（direction）、滚动方式（behavior）、滚动次数（loop）、滚动速度（scrollamount）、滚动延迟（scrolldelay）、背景颜色（bgcolor）、宽度和高度等常用属性。语法格式如下： 1&lt;marquee direction=\"滚动方向\" behavior=\"滚动方式\"&gt;滚动的文字&lt;/marquee&gt; 其中，direction的值有up、down、left和rigth，默认向左滚动‘behavior的值有scroll、slide和alternate，分别表示循环滚动、只滚动一次和来回交替滚动；loop的值为整数；scrollamount的值为文字每次移动的长度，以像素为单位；scrolldelay的单位是毫秒。","tags":[{"name":"Web前端","slug":"Web前端","permalink":"http://hawslice.com/tags/Web%E5%89%8D%E7%AB%AF/"},{"name":"HTML","slug":"HTML","permalink":"http://hawslice.com/tags/HTML/"}]},{"title":"Hello World","date":"2020-04-18T06:57:45.957Z","path":"2020/04/18/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]